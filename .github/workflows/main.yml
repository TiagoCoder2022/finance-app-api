name: Deploy

on:
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      
      - name: Create .env.test file
        run: |
          echo "DATABASE_URL=postgresql://postgres:password@localhost:5433/finance-app" >> .env.test
          echo "JWT_ACCESS_TOKEN_SECRET=my_secrete_key" >> .env.test
          echo "JWT_REFRESH_TOKEN_SECRET=my_secrete_key_2" >> .env.test

      - name: Install dependencies
        run: npm ci --include=dev

      - name: ESLint
        run: npm run eslint:check

      - name: Prettier
        run: npm run prettier:check

      # ✅ Instalação do Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # ✅ Inicia o serviço Docker (se necessário)
      - name: Start Docker service
        run: sudo service docker start

      - name: Test
        run: npm run test

  migrate:
    runs-on: ubuntu-latest
    needs: check
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          envkey_JWT_ACCESS_TOKEN_SECRET: ${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
          envkey_JWT_REFRESH_TOKEN_SECRET: ${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
          
      - name: Run migrations
        run: npx prisma migrate deploy

  deploy:
    runs-on: ubuntu-latest
    needs: migrate
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production         
        run: |
          curl "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
